<?php
/**
 * Author: Damian Schwyrz <mail@damianschwyrz.de>
 * URL: https://www.damianschwyrz.de
 * Copyright (c) 2018.
 */

namespace App\Jobs;

use App\Target;
use App\Task\CrawlUrl;
use Carbon\Carbon;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;

/**
 * Class FetchHttpDataForHost
 * @package App\Jobs
 */
class FetchHttpDataForHost implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;
    /**
     * @var int
     */
    public $timeout = 28;
    /**
     * @var int
     */
    public $tries = 1;
    /**
     * @var \App\Target
     */
    protected $target;

    /**
     * Create a new job instance.
     *
     * @return void
     */
    public function __construct(Target $target)
    {
        $this->target = $target;
    }

    /**
     * Execute the job: Crawl the http version of a given target (specified by its domain/subdomain) and get the
     * http status, header and final redirect url if found.
     *
     * @return void
     */
    public function handle()
    {

        $httpUrl = "https://" . $this->target->subdomain;

        $crawler = new CrawlUrl($httpUrl);
        $crawler->start();
        $response = $crawler->getResponse();

        if ($response['http_status'] == 0) {
            $httpUrl = "http://" . $this->target->subdomain;

            $crawler = new CrawlUrl($httpUrl);
            $crawler->start();
            $response = $crawler->getResponse();
        }

        $this->target->http_status = $response['http_status'];
        $this->target->final_redirect_url = $response['final_redirect_url'] ?? $httpUrl;
        $this->target->http_response_header = $response['http_response_header'];
        $this->target->autoFetchedHttpData_at = Carbon::now();
        $this->target->save();
    }

}
