<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\User;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\View\View;

class UserController extends Controller
{
    const PAGINATE = 12;

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(): View
    {
        return view('admin.user.index', [
            'users' => User::paginate(self::PAGINATE),
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create(): View
    {
        return view('admin.user.create', []);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request): RedirectResponse
    {
        $this->validate($request, [
            'email'    => 'required|string|unique:users',
            'name'     => 'required|string',
            'password' => 'required|confirmed|min:6',
        ]);


        $user = User::create(
            array_merge(
                $request->all(),
                [
                    'password' => Hash::make($request->password),
                ]
            )
        );

        return redirect()
            ->route('admin.user.index')
            ->with('status', 'Succesfully created user');
    }


    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\User $user
     *
     * @return \Illuminate\Http\Response
     */
    public function edit(User $user): View
    {
        return view('admin.user.edit', [
            'user' => $user,
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @param  \App\User                $user
     *
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, User $user): RedirectResponse
    {

        $updateData = $request->except("password");

        $rules = [
            'email' => 'required|string|unique:users,email,' . $user->id,
            'name'  => 'required|string',
        ];

        /**
         * If password was set, confirm, check and hash!
         */
        if ($request->filled("password")) {
            $rules['password'] = "required|string|min:6";

            $updateData = array_merge(
                $request->all(),
                [
                    'password' => Hash::make($request->password),
                ]
            );
        }

        $this->validate($request, $rules);

        $user->fill($updateData)->save();

        return redirect()
            ->route('admin.user.index')
            ->with('status', 'Succesfully created user');
    }


    /**
     * @param \Illuminate\Http\Request $request
     * @param \App\User                $user
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy(Request $request, User $user): JsonResponse
    {
        if ($user->id === 1) {
            return response()->json(['status' => false]);
        }

        return response()->json(['status' => $user->delete()]);
    }
}
